# Generated by Django 5.2.6 on 2025-09-29 11:10

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Evaluations",
            fields=[
                (
                    "evaluation_id",
                    models.AutoField(
                        db_column="evaluation_id", primary_key=True, serialize=False
                    ),
                ),
                (
                    "score",
                    models.IntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ]
                    ),
                ),
                ("feedback", models.TextField(blank=True, null=True)),
                ("evaluated_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "db_table": "Evaluations",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MatchScores",
            fields=[
                (
                    "match_id",
                    models.AutoField(
                        db_column="match_id", primary_key=True, serialize=False
                    ),
                ),
                ("score", models.FloatField()),
                ("evaluated_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "db_table": "MatchScores",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Portfolios",
            fields=[
                (
                    "portfolio_id",
                    models.AutoField(
                        db_column="portfolio_id", primary_key=True, serialize=False
                    ),
                ),
                ("description", models.TextField(blank=True, null=True)),
                ("url", models.URLField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "db_table": "Portfolios",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Projects",
            fields=[
                (
                    "project_id",
                    models.AutoField(
                        db_column="project_id", primary_key=True, serialize=False
                    ),
                ),
                ("title", models.CharField(max_length=100)),
                ("description", models.TextField(blank=True, null=True)),
                ("goal", models.TextField(blank=True, null=True)),
                ("tech_stack", models.TextField(blank=True, null=True)),
                ("is_open", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "db_table": "Projects",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Skills",
            fields=[
                (
                    "skill_id",
                    models.AutoField(
                        db_column="skill_id", primary_key=True, serialize=False
                    ),
                ),
                ("name", models.CharField(max_length=50)),
            ],
            options={
                "db_table": "Skills",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="TeamMembers",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("role", models.CharField(max_length=50)),
                ("joined_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "db_table": "TeamMembers",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Teams",
            fields=[
                (
                    "team_id",
                    models.AutoField(
                        db_column="team_id", primary_key=True, serialize=False
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "db_table": "Teams",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Users",
            fields=[
                (
                    "user_id",
                    models.AutoField(
                        db_column="user_id", primary_key=True, serialize=False
                    ),
                ),
                ("name", models.CharField(max_length=50)),
                ("birthdate", models.DateField(blank=True, null=True)),
                ("email", models.EmailField(max_length=254, unique=True)),
                ("password_hash", models.CharField(max_length=255)),
                ("introduction", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "db_table": "Users",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="UserSkills",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "proficiency_level",
                    models.CharField(
                        choices=[
                            ("Beginner", "Beginner"),
                            ("Intermediate", "Intermediate"),
                            ("Advanced", "Advanced"),
                        ],
                        max_length=20,
                    ),
                ),
            ],
            options={
                "db_table": "UserSkills",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ProjectEmbedding",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("embedding", models.JSONField(blank=True, null=True)),
                (
                    "project",
                    models.OneToOneField(
                        db_column="project_id",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="embedding_profile",
                        to="teamspace.projects",
                    ),
                ),
            ],
            options={
                "db_table": "ProjectEmbeddings",
                "managed": True,
            },
        ),
        migrations.CreateModel(
            name="UserEmbedding",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("embedding", models.JSONField(blank=True, null=True)),
                (
                    "user",
                    models.OneToOneField(
                        db_column="user_id",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="embedding_profile",
                        to="teamspace.users",
                    ),
                ),
            ],
            options={
                "db_table": "UserEmbeddings",
                "managed": True,
            },
        ),
    ]
