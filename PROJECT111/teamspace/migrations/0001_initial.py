# Generated by Django 4.2 on 2025-07-16 08:05

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Projects',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('goal', models.TextField(blank=True, null=True)),
                ('tech_stack', models.TextField(blank=True, null=True)),
                ('is_open', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Skills',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('birthdate', models.DateField(blank=True, null=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('password_hash', models.CharField(max_length=255)),
                ('introduction', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Teams',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('project', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='teamspace.projects')),
            ],
        ),
        migrations.AddField(
            model_name='projects',
            name='creator',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='teamspace.users'),
        ),
        migrations.CreateModel(
            name='UserSkills',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('proficiency_level', models.CharField(choices=[('Beginner', 'Beginner'), ('Intermediate', 'Intermediate'), ('Advanced', 'Advanced')], max_length=20)),
                ('skill', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='teamspace.skills')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='teamspace.users')),
            ],
            options={
                'unique_together': {('user', 'skill')},
            },
        ),
        migrations.CreateModel(
            name='TeamMembers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(max_length=50)),
                ('joined_at', models.DateTimeField(auto_now_add=True)),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='teamspace.teams')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='teamspace.users')),
            ],
            options={
                'unique_together': {('team', 'user')},
            },
        ),
        migrations.CreateModel(
            name='Portfolios',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(blank=True, null=True)),
                ('url', models.URLField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='teamspace.projects')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='teamspace.users')),
            ],
            options={
                'unique_together': {('user', 'project')},
            },
        ),
        migrations.CreateModel(
            name='MatchScores',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.FloatField()),
                ('evaluated_at', models.DateTimeField(auto_now_add=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='teamspace.projects')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='teamspace.users')),
            ],
            options={
                'unique_together': {('user', 'project')},
            },
        ),
        migrations.CreateModel(
            name='Evaluations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.IntegerField()),
                ('feedback', models.TextField(blank=True, null=True)),
                ('evaluated_at', models.DateTimeField(auto_now_add=True)),
                ('evaluatee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_evaluations', to='teamspace.users')),
                ('evaluator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='given_evaluations', to='teamspace.users')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='teamspace.teams')),
            ],
            options={
                'unique_together': {('evaluator', 'evaluatee', 'team')},
            },
        ),
    ]
